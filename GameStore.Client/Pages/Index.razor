@page "/"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Blazor Game Catalog</PageTitle>

<h1>Game Catalog</h1>

<div class="row mb-4">
  <div class="col-md-6">
    <button class="btn btn-primary" @onclick="CreateGame">New Game</button>
  </div>
</div>
@if (games is null)
{
  <p><em>Loading...</em></p>
}
else
{
  <DeleteGame Game="@currentGame" OnClose="(accepted) => OnDeleteModalClose(accepted)" />

  <table class="table table=striped table-bordered table-hover">
    <thead class="table-dark">
      <th>ID</th>
      <th>Name</th>
      <th>Genre</th>
      <th>Price</th>
      <th>Release Date</th>
      <th>&nbsp;</th>
    </thead>

    <tbody>
      @foreach (var game in games)
      {
        <tr>
          <td>@game.ID</td>
          <td>@game.Name</td>
          <td>@game.Genre</td>
          <td>@game.Price.ToString("C")</td>
          <td>@game.ReleaseDate.ToShortDateString()</td>
          <td>
            <button class="btn btn-primary" @onclick="()=> EditGame(game.ID)">
            <i class="oi oi-pencil"></i>
            </button>
            <button class="btn btn-danger" 
              data-bs-toggle="modal"
              data-bs-target="#deleteModal"
              @onclick="(()=> currentGame = game)">
            <i class="oi oi-x"></i>
            </button>
          </td>
        </tr>
      }
    </tbody>
  </table>

}

@code {
  private Game[]? games;
  private Game? currentGame;

  protected override void OnInitialized()
  {
    games = GameClient.GetGames();
  }
  private void CreateGame()
  {
    NavigationManager.NavigateTo("/game");
  }

  private void EditGame(int id)
  {
    NavigationManager.NavigateTo($"/game/{id}");
  }
  private void OnDeleteModalClose(bool accepted)
  {
    if(accepted)
    {
      GameClient.DeleteGame(currentGame!.ID);
      games = GameClient.GetGames();
    }
  }
}